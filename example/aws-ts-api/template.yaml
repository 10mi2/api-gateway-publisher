Description: "Microservice API Boilerplate example"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  StageName:
    Type: String
    Default: v1
  ApiVersion:
    Type: String
  PlumbingBucket:
    Type: String
    Default: openapi-plumbing

Resources:
  # You don't actually need the API, but it does allow you to centralize your auth config, and allows you to add an Open API Spec
  # If you change the name of this Logical ID, then you need to update the Makefile to pull the correct API Gateway ID based on this logical ID.
  ServiceApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: OpenAPIGateway-Example
      StageName: !Ref StageName
      DefinitionBody:
        Fn::Transform:
          Name: 'AWS::Include'
          Parameters:
            Location:
              Fn::Sub: "s3://${PlumbingBucket}/${AWS::StackName}-openapi.yaml"
  HandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Handles Crud operations for the Locations service
      Runtime: nodejs10.x
      CodeUri: ./dist
      Handler: index.handler
      Timeout: 10
      Events:
        Get:
          Type: Api
          Properties:
            Path: /
            RestApiId: !Ref ServiceApi
            Method: get
  DocsDeployment:
    Type: Custom::DeployDocumentation
    Properties:
      ServiceToken: !ImportValue DocsDeployFunctionArn
      DefinitionKey: aws-ts-api
      APIGatewayId: !Ref ServiceApi
      APIGatewayStage: !Ref StageName
Outputs:
  GatewayEndpoint:
    Description: "API Prod stage endpoint"
    Value: !Sub "https://${ServiceApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
